{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Price.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","response","json","coinId","fetchCoinTickers","endDate","Math","floor","Date","now","startDate","Chart","props","isDark","themeContext","useContext","ThemeContext","useOutletContext","useQuery","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","x","time_open","y","open","toFixed","high","low","close","options","theme","mode","chart","toolbar","show","background","plotOptions","candlestick","colors","upward","increaseColor","downward","decreaseColor","xaxis","GoBackBtn","styled","button","detailPage","recBgColor","color","Title","h1","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","selected","bgColor","Coin","useParams","state","useLocation","navigate","useNavigate","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","name","onClick","rank","symbol","quotes","USD","description","total_supply","max_supply","to","context","CoinsList","ul","li","mainPage","hoverColor","subtitleColor","Img","img","Coins","slice","coin","pathname","id","src","PriceInfoList","PriceSubject","PriceInfo","info","Price","console","log","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","volume_24h","volume_24h_change_24h","prices","subject","unit","translation","Number","key","Router","path","element","darkTheme","whiteTheme","GlobalStyle","createGlobalStyle","DarkLightModeBtn","queryClient","QueryClient","App","useState","setIsDark","prev","client","initialIsOpen","ReactDOM","createRoot","document","getElementById","render"],"mappings":"+PAAMA,EAAQ,iCAEP,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,WADvB,cACCI,EADD,gBAEQA,EAASC,OAFjB,oF,kEAKA,WAA6BC,GAA7B,eAAAJ,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,IAD7C,cACCF,EADD,gBAEQA,EAASC,OAFjB,oF,sBAKA,SAAeE,EAAtB,kC,4CAAO,WAAgCD,GAAhC,eAAAJ,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,oBAAwBM,IAD/C,cACCF,EADD,gBAEQA,EAASC,OAFjB,oF,kEAKA,WAAgCC,GAAhC,mBAAAJ,EAAA,6DACCM,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAFvB,SAGkBL,MAAM,GAAD,OACvBH,EADuB,kBACLM,EADK,mCAC4BO,EAD5B,gBAC6CL,IAJpE,cAGCJ,EAHD,gBAMQA,EAASC,OANjB,oF,iCCkEQS,I,oBAAAA,EA5Df,SAAeC,GACb,IAAQC,EAAWD,EAAXC,OACFC,EAAeC,qBAAWC,KACxBb,EAAWc,cAAXd,OACR,EAAiCe,mBAC/B,CAAC,YAAaf,IACd,kBDZG,SAAP,kCCYUgB,CAAiBhB,KACvB,CACEiB,gBAAiB,MAJbC,EAAR,EAAQA,UAAR,IAAmBC,YAAnB,MAA0B,GAA1B,EAQA,OAAID,EAAkB,oDAGpB,cAAC,IAAD,CACEE,KAAK,cACLC,OACE,CACE,CACEF,KAAMA,EAAKG,KAAI,SAAAC,GACb,MAAO,CACLC,EAAGD,EAAME,UACTC,EAAG,CACDH,EAAMI,KAAKC,QAAQ,GACnBL,EAAMM,KAAKD,QAAQ,GACnBL,EAAMO,IAAIF,QAAQ,GAClBL,EAAMQ,MAAMH,QAAQ,UAOhCI,QAAS,CACPC,MAAO,CACLC,KAAMxB,EAAS,OAAS,SAE1ByB,MAAO,CACLC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,YAAa,CACXC,YAAa,CACXC,OAAQ,CACNC,OAAQ/B,EAAagC,cACrBC,SAAUjC,EAAakC,iBAI7BC,MAAO,CACL1B,KAAM,gB,QC/DV2B,EAAYC,IAAOC,OAAV,2MAIO,SAAAxC,GAAK,OAAIA,EAAMwB,MAAMiB,WAAWC,cAG3C,SAAA1C,GAAK,OAAIA,EAAMwB,MAAMiB,WAAWE,SAKrCC,EAAQL,IAAOM,GAAV,+DAEA,SAAA7C,GAAK,OAAIA,EAAMwB,MAAMiB,WAAWE,SAGrCG,EAASP,IAAOQ,KAAV,sEAKNC,EAAYT,IAAOU,IAAV,0FAMTC,EAASX,IAAOY,OAAV,mHAONC,EAAWb,IAAOU,IAAV,0JAGQ,SAAAjD,GAAK,OAAIA,EAAMwB,MAAMiB,WAAWC,cAKhDW,EAAed,IAAOU,IAAV,iPAUP,SAAAjD,GAAK,OAAIA,EAAMwB,MAAMiB,WAAWE,SAGrCW,EAAcf,IAAOgB,EAAV,gEAEN,SAAAvD,GAAK,OAAIA,EAAMwB,MAAMiB,WAAWE,SAGrCa,EAAOjB,IAAOU,IAAV,2HAOJQ,EAAMlB,IAAOQ,KAAV,iPAIQ,SAAA/C,GAAK,OAAKA,EAAM0D,SAAW,OAAS,OAC/B,SAAA1D,GAAK,OACtBA,EAAM0D,SAEH1D,EAAMwB,MAAMiB,WAAWkB,SAAShB,MADhC3C,EAAMwB,MAAMiB,WAAWkB,SAASC,WAI7B,SAAA5D,GAAK,OACXA,EAAM0D,SAEH1D,EAAMwB,MAAMiB,WAAWkB,SAASC,QADhC5D,EAAMwB,MAAMiB,WAAWkB,SAAShB,SA4JzBkB,I,eAAAA,GAxFf,WACE,IAAQtE,EAAWuE,cAAXvE,OACAwE,EAAUC,cAAVD,MACFE,EAAWC,cAEXC,EAAaC,YAAS,kBACtBC,EAAaD,YAAS,kBAE5B,EAAmD9D,mBACjD,CAAC,OAAQf,IACT,kBFrKG,SAAP,kCEqKU+E,CAAc/E,MAFHgF,EAAnB,EAAQ9D,UAA8B+D,EAAtC,EAAgC9D,KAIhC,EAAyDJ,mBACvD,CAAC,UAAWf,IACZ,kBAAMC,EAAiBD,KACvB,CACEiB,gBAAiB,MAJFiE,EAAnB,EAAQhE,UAAiCiE,EAAzC,EAAmChE,KAO7BiE,EAAUJ,GAAeE,EAW/B,OACE,eAACzB,EAAD,WACE,cAAC4B,EAAA,EAAD,UACE,gCACQ,OAALb,QAAK,IAALA,KAAOc,KAAOd,EAAMc,KAAOF,EAAU,aAAH,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUK,SAGnE,cAACvC,EAAD,CAAWwC,QAhBE,WAEfb,EAAS,MAcP,qBACA,cAACf,EAAD,UACE,cAACN,EAAD,UACQ,OAALmB,QAAK,IAALA,KAAOc,KAAOd,EAAMc,KAAOF,EAAU,aAAH,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUK,SAGlEF,EACC,cAAC7B,EAAD,yBAEA,qCACE,eAACM,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAUO,UAEnB,eAAC1B,EAAD,WACE,2CACA,4CAAQmB,QAAR,IAAQA,OAAR,EAAQA,EAAUQ,aAEpB,eAAC3B,EAAD,WACE,0CACA,4CAAQqB,QAAR,IAAQA,OAAR,EAAQA,EAAaO,OAAOC,IAAIpE,MAAMK,QAAQ,YAGlD,cAACmC,EAAD,iBAAckB,QAAd,IAAcA,OAAd,EAAcA,EAAUW,cACxB,eAAC/B,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOqB,QAAP,IAAOA,OAAP,EAAOA,EAAaU,kBAEtB,eAAC/B,EAAD,WACE,+CACA,sCAAOqB,QAAP,IAAOA,OAAP,EAAOA,EAAaW,mBAIxB,eAAC7B,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfW,EAAf,SACE,cAAC,IAAD,CAAMiB,GAAE,WAAM/F,EAAN,UAAR,qBAEF,cAACkE,EAAD,CAAKC,SAAyB,OAAfS,EAAf,SACE,cAAC,IAAD,CAAMmB,GAAE,WAAM/F,EAAN,UAAR,wBAIJ,cAAC,IAAD,CAAQgG,QAAS,CAAEhG,mBC9OvByD,GAAYT,IAAOU,IAAV,0FAMTC,GAASX,IAAOY,OAAV,mHAONqC,GAAYjD,IAAOkD,GAAV,0BAET5B,GAAOtB,IAAOmD,GAAV,6RACY,SAAA1F,GAAK,OAAIA,EAAMwB,MAAMmE,SAAS/B,WACzC,SAAA5D,GAAK,OAAIA,EAAMwB,MAAMmE,SAAShD,SAW1B,SAAA3C,GAAK,OAAIA,EAAMwB,MAAMmE,SAASC,cAKvChD,GAAQL,IAAOM,GAAV,+DAEA,SAAA7C,GAAK,OAAIA,EAAMwB,MAAMqE,iBAG1B/C,GAASP,IAAOQ,KAAV,sEAKN+C,GAAMvD,IAAOwD,IAAV,sFAoDMC,I,SAAAA,GApCf,WACE,MAA4B1F,mBAAkB,WAAYpB,GAAlDwB,EAAR,EAAQA,KAAMD,EAAd,EAAcA,UAEd,OACE,eAAC,GAAD,WACE,cAACmE,EAAA,EAAD,UACE,4CAGF,cAAC,GAAD,UACE,cAAC,GAAD,sBAEDnE,EACC,cAAC,GAAD,yBAEA,cAAC+E,GAAD,iBACG9E,QADH,IACGA,OADH,EACGA,EAAMuF,MAAM,EAAG,KAAKpF,KAAI,SAAAqF,GAAI,OAC3B,cAAC,GAAD,UACE,eAAC,IAAD,CACEZ,GAAI,CACFa,SAAS,IAAD,OAAMD,EAAKE,KAErBrC,MAAO,CAAEc,KAAMqB,EAAKrB,MAJtB,UAME,cAACiB,GAAD,CACEO,IAAG,mDAA8CH,EAAKE,GAAnD,UAEJF,EAAKrB,KATR,cADSqB,EAAKE,aCzEtBE,GAAgB/D,IAAOkD,GAAV,4BAEbc,GAAehE,IAAOQ,KAAV,6CACP,SAAA/C,GAAK,OAAIA,EAAMwB,MAAMmE,SAAShD,SAGnC6D,GAAYjE,IAAOmD,GAAV,yIACO,SAAA1F,GAAK,OAAIA,EAAMwB,MAAMmE,SAAS/B,WACzC,SAAA5D,GACP,OAAIA,EAAMyG,KAAO,EAAUzG,EAAMwB,MAAMU,cAChClC,EAAMwB,MAAMY,iBAsGRsE,OAzDf,SAAe1G,GAAoB,IAAD,EACxBT,EAAWc,cAAXd,OACR,EAA4Be,mBAC1B,CAAC,YAAaf,IACd,kBAAMC,EAAiBD,KACvB,CACEiB,gBAAiB,MAJbC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KASnB,GADAiG,QAAQC,IAAI,SAAUlG,GAClBD,EAAW,OAAO,oDACtB,GAAI,OAACC,QAAD,IAACA,GAAD,UAACA,EAAMuE,cAAP,QAAC,EAAcC,IAAK,OAAO,2DAE/B,MAOIxE,EAAKuE,OAAOC,IANd2B,EADF,EACEA,mBACAC,EAFF,EAEEA,mBACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,kBACAC,EALF,EAKEA,WACAC,EANF,EAMEA,sBAGIC,EAAS,CACb,CAAEC,QAAS,eAAgBC,KAAM,IAAKC,YAAaT,GACnD,CAAEO,QAAS,eAAgBC,KAAM,IAAKC,YAAaR,GACnD,CAAEM,QAAS,eAAgBC,KAAM,IAAKC,YAAaP,GACnD,CAAEK,QAAS,eAAgBC,KAAM,IAAKC,YAAaN,GACnD,CACEI,QAAS,wBACTC,KAAM,GACNC,YAAaC,OAAON,EAAW9F,QAAQ,KAEzC,CACEiG,QAAS,mCACTC,KAAM,IACNC,YAAaJ,IAIjB,OACE,eAACZ,GAAD,WACGa,EAAOtG,KAAI,SAAC4F,EAAMe,GACjB,IAAQJ,EAA+BX,EAA/BW,QAASC,EAAsBZ,EAAtBY,KAAMC,EAAgBb,EAAhBa,YACvB,OACE,eAACd,GAAD,CAAyBC,KAAMa,EAA/B,UACE,eAACf,GAAD,WAAea,EAAf,SACU,MAATC,EAAeA,EAAO,GACtBC,EAHH,IAG0B,MAATD,EAAeA,EAAO,KAHvBD,MAJtB,QClFWK,I,MAAAA,GAbf,SAAgBzH,GACd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0H,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,eAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,IAAhC,UACE,cAAC,IAAD,CAAOD,KAAI,QAAWC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOD,KAAI,QAAWC,QAAS,cAAC,EAAD,eAAW3H,e,SCfvC4H,GAA0B,CACrC/B,cAAe,UACfjC,QAAS,kBACT1B,cAAe,oBACfE,cAAe,oBAEfuD,SAAU,CACRhD,MAAO,QACPiD,WAAY,QACZhC,QAAS,aAGXnB,WAAY,CACVE,MAAO,QACPD,WAAY,qBACZiB,SAAU,CACRhB,MAAO,QACPiB,QAAS,wBAKFiE,GAA2B,CACtChC,cAAe,UACfjC,QAAS,QACT1B,cAAe,oBACfE,cAAe,oBAEfuD,SAAU,CACRhD,MAAO,QACPiD,WAAY,QACZhC,QAAS,aAGXnB,WAAY,CACVE,MAAO,QACPD,WAAY,YACZiB,SAAU,CACRhB,MAAO,QACPiB,QAAS,eCjCTkE,GAAcC,YAAH,y+CAuDI,SAAA/H,GAAK,OAAIA,EAAMwB,MAAMoC,WAChC,SAAA5D,GAAK,OAAIA,EAAMwB,MAAMmE,SAAShD,SASlCqF,GAAmBzF,IAAOC,OAAV,gQAehByF,GAAc,IAAIC,cAqBTC,OAnBf,WACE,MAA4BC,oBAAS,GAArC,mBAAOnI,EAAP,KAAeoI,EAAf,KAIA,OACE,eAAC,IAAD,CAAe7G,MAAOvB,EAAS2H,GAAYC,GAA3C,UACE,cAACG,GAAD,CAAkBlD,QAJE,kBAAMuD,GAAU,SAAAC,GAAI,OAAKA,MAI7C,SACGrI,EAAS,aAAe,cAE3B,eAAC,sBAAD,CAAqBsI,OAAQN,GAA7B,UACE,cAACH,GAAD,IACA,cAAC,GAAD,CAAQ7H,OAAQA,IAChB,cAAC,sBAAD,CAAoBuI,eAAe,WCpG9BC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,GAAD,O","file":"static/js/main.775d2031.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  const response = await fetch(`${BASE_URL}/coins`);\n  return await response.json();\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  const response = await fetch(`${BASE_URL}/coins/${coinId}`);\n  return await response.json();\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  const response = await fetch(`${BASE_URL}/tickers/${coinId}`);\n  return await response.json();\n}\n\nexport async function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  const response = await fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  );\n  return await response.json();\n}\n","import { useContext } from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { useOutletContext } from \"react-router\";\nimport { ThemeContext } from \"styled-components\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId?: string;\n  isDark: boolean;\n}\n\nfunction Chart(props: ChartProps) {\n  const { isDark } = props;\n  const themeContext = useContext(ThemeContext);\n  const { coinId } = useOutletContext<ChartProps>();\n  const { isLoading, data = [] } = useQuery<IHistorical[]>(\n    [\"coinChart\", coinId],\n    () => fetchCoinHistory(coinId!),\n    {\n      refetchInterval: 5000\n    }\n  );\n\n  if (isLoading) return <span>Loading chart...</span>;\n\n  return (\n    <ApexCharts\n      type=\"candlestick\"\n      series={\n        [\n          {\n            data: data.map(price => {\n              return {\n                x: price.time_open,\n                y: [\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2)\n                ]\n              };\n            })\n          }\n        ] as ApexAxisChartSeries\n      }\n      options={{\n        theme: {\n          mode: isDark ? \"dark\" : \"light\"\n        },\n        chart: {\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        plotOptions: {\n          candlestick: {\n            colors: {\n              upward: themeContext.increaseColor,\n              downward: themeContext.decreaseColor\n            }\n          }\n        },\n        xaxis: {\n          type: \"datetime\"\n        }\n      }}\n    />\n  );\n}\n\nexport default Chart;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useParams\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\nconst GoBackBtn = styled.button`\n  margin-top: 12px;\n  width: 100px;\n  height: 36px;\n  background-color: ${props => props.theme.detailPage.recBgColor};\n  border-radius: 8px;\n  font-size: 1em;\n  color: ${props => props.theme.detailPage.color};\n  cursor: pointer;\n  border: none;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.detailPage.color};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${props => props.theme.detailPage.recBgColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n  color: ${props => props.theme.detailPage.color};\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n  color: ${props => props.theme.detailPage.color};\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: ${props => (props.isActive ? \"bold\" : 400)};\n  background-color: ${props =>\n    !props.isActive\n      ? props.theme.detailPage.selected.bgColor\n      : props.theme.detailPage.selected.color};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${props =>\n    !props.isActive\n      ? props.theme.detailPage.selected.color\n      : props.theme.detailPage.selected.bgColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteState {\n  state: {\n    name: string;\n  };\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams();\n  const { state } = useLocation() as RouteState;\n  const navigate = useNavigate();\n\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const chartMatch = useMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId!)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId!),\n    {\n      refetchInterval: 5000\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  const onGoBack = () => {\n    // # description : just go home.\n    navigate(\"/\");\n\n    // # description : before page or go home.\n    // if (!!window.history.state.idx) navigate(-1);\n    // else navigate(\"/\", { replace: true });\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <GoBackBtn onClick={onGoBack}>Go Back</GoBackBtn>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Outlet context={{ coinId }} />\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${props => props.theme.mainPage.bgColor};\n  color: ${props => props.theme.mainPage.color};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${props => props.theme.mainPage.hoverColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.subtitleColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { data, isLoading } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n\n      <Header>\n        <Title>Coins</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map(coin => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`\n                }}\n                state={{ name: coin.name }}\n              >\n                <Img\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id}.png`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { useQuery } from \"react-query\";\nimport { useOutletContext } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\ninterface Info {\n  info: number;\n}\n\nconst PriceInfoList = styled.ul``;\n\nconst PriceSubject = styled.span`\n  color: ${props => props.theme.mainPage.color};\n`;\n\nconst PriceInfo = styled.li<Info>`\n  background-color: ${props => props.theme.mainPage.bgColor};\n  color: ${props => {\n    if (props.info > 0) return props.theme.increaseColor;\n    return props.theme.decreaseColor;\n  }};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  padding: 20px;\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId?: string;\n}\n\nfunction Price(props: PriceProps) {\n  const { coinId } = useOutletContext<PriceProps>();\n  const { isLoading, data } = useQuery<PriceData>(\n    [\"coinPrice\", coinId],\n    () => fetchCoinTickers(coinId!),\n    {\n      refetchInterval: 5000\n    }\n  );\n\n  console.log(\"# data\", data);\n  if (isLoading) return <span>Loading price...</span>;\n  if (!data?.quotes?.USD) return <span>No information price...</span>;\n\n  const {\n    percent_change_15m,\n    percent_change_30m,\n    percent_change_1h,\n    percent_change_6h,\n    volume_24h,\n    volume_24h_change_24h\n  } = data.quotes.USD;\n\n  const prices = [\n    { subject: \"Before 15min\", unit: \"%\", translation: percent_change_15m },\n    { subject: \"Before 30min\", unit: \"%\", translation: percent_change_30m },\n    { subject: \"Before 1hour\", unit: \"%\", translation: percent_change_1h },\n    { subject: \"Before 6hour\", unit: \"%\", translation: percent_change_6h },\n    {\n      subject: \"During 24hours volumn\",\n      unit: \"\",\n      translation: Number(volume_24h.toFixed(3))\n    },\n    {\n      subject: \"During 24hours volumn transition\",\n      unit: \"%\",\n      translation: volume_24h_change_24h\n    }\n  ];\n\n  return (\n    <PriceInfoList>\n      {prices.map((info, key) => {\n        const { subject, unit, translation } = info;\n        return (\n          <PriceInfo key={subject} info={translation}>\n            <PriceSubject>{subject} : </PriceSubject>\n            {unit === \"$\" ? unit : \"\"}\n            {translation} {unit === \"%\" ? unit : \"\"}\n          </PriceInfo>\n        );\n      })}\n      ;\n    </PriceInfoList>\n  );\n}\n\nexport default Price;\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Chart from \"./routes/Chart\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\nimport Price from \"./routes/Price\";\n\ninterface RouterProps {\n  isDark: boolean;\n}\n\nfunction Router(props: RouterProps) {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Coins />} />\n        <Route path=\"/:coinId\" element={<Coin />}>\n          <Route path={`price`} element={<Price />} />\n          <Route path={`chart`} element={<Chart {...props} />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  subtitleColor: \"#9c88ff\",\n  bgColor: \"rgba(0,0,0,0.9)\",\n  increaseColor: \"rgba(255,0,0,0.9)\",\n  decreaseColor: \"rgba(0,0,255,0.9)\",\n\n  mainPage: {\n    color: \"black\",\n    hoverColor: \"white\",\n    bgColor: \"lightgray\"\n  },\n\n  detailPage: {\n    color: \"white\",\n    recBgColor: \"rgba(0, 0, 0, 0.5)\",\n    selected: {\n      color: \"white\",\n      bgColor: \"rgba(0, 0, 0, 0.5)\"\n    }\n  }\n};\n\nexport const whiteTheme: DefaultTheme = {\n  subtitleColor: \"#9c88ff\",\n  bgColor: \"white\",\n  increaseColor: \"rgba(255,0,0,0.9)\",\n  decreaseColor: \"rgba(0,0,255,0.9)\",\n\n  mainPage: {\n    color: \"black\",\n    hoverColor: \"white\",\n    bgColor: \"lightgray\"\n  },\n\n  detailPage: {\n    color: \"black\",\n    recBgColor: \"lightgray\",\n    selected: {\n      color: \"black\",\n      bgColor: \"lightgray\"\n    }\n  }\n};\n","import { QueryClient, QueryClientProvider } from \"react-query\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, whiteTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${props => props.theme.bgColor};\n  color:${props => props.theme.mainPage.color};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst DarkLightModeBtn = styled.button`\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n\n  width: 100px;\n  height: 36px;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  font-size: 1em;\n  color: white;\n  cursor: pointer;\n  border: none;\n`;\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [isDark, setIsDark] = useState(true);\n\n  const toggleThemeMode = () => setIsDark(prev => !prev);\n\n  return (\n    <ThemeProvider theme={isDark ? darkTheme : whiteTheme}>\n      <DarkLightModeBtn onClick={toggleThemeMode}>\n        {isDark ? \"White Mode\" : \"Dark Mode\"}\n      </DarkLightModeBtn>\n      <QueryClientProvider client={queryClient}>\n        <GlobalStyle />\n        <Router isDark={isDark} />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")!);\nroot.render(<App />);\n"],"sourceRoot":""}